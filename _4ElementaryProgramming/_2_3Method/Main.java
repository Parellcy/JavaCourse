package _4ElementaryProgramming._2_3Method;

public class Main {
    public static void main(String[] args) {
        //方法使用细节

        //通过数组使方法返回多值
        System.out.println("==========");
        A a = new A();
        int[] res = a.getSumAndSub(1,4);
        System.out.println("和："+res[0]);
        System.out.println("差："+res[1]);

        //同一类中的方法调用
        System.out.println("==========");
        a.sayOk();//详见A类中的sayOk方法

        //跨类中的方法A类调用B类方法
        System.out.println("==========");
        a.sayBclass();
    }
}

/*方法使用细节
1.访问修饰符（作用：控制方法使用的范围）
有四种（public,protected,默认,private）
可选择性写，如果不写，默认访问的控制范围
2.返回类型
一个方法最多有一个返回值（思考？如何返回多个结果：可以使用数组返回多值）
返回类型可以为任意类型
如果方法要求有返回数据类型，则方法体中的最后执行语句必须为return 值;并且值与返回数据类型必须一致或兼容
    兼容：数据类型强制转换。例：int->double
如果方法是void，方法体中可以没有return语句
    可以有return，但是不可写返回值，即return;
3.方法名
遵循驼峰命名法。最好见名知义，表达出该方法功能即可
驼峰命名法：
    大驼峰命名法:
    每个单词的首字母都大写，而且不包含其他空格或其他分隔符。通常用于类名、类型名、方法名等，例如：MyClass。
    小驼峰命名法:
    第一个单词的首字母小写，之后的单词首字母大写，同样不包含其他空格或其他分隔符，通常用于变量名、函数名，例如：myVariable。
4.参数列表
一个方法可以有0个或者多个参数，中间永逗号隔开
参数类型可以为任意类型
调用带有参数的方法是，一定要对应参数列表传入相同类型或兼容类型的参数
    方法定义时的参数称为形式参数，简称形参
    方法调用时的参数称为实际参数，简称实参
    实参与形参的类型要一致或兼容，顺序必须一致
5.方法体
撰写完成方法所需功能的语句
可以为输入、输出、变量、运算、分支、循环、方法调用
但里面不能再定义方法
6.方法调用
同一个类中的方法调用：直接调用，详见31行
跨类中的方法A类调用B类方法：需要通过对象名调用，详见36，37行
特别说明：跨类的方法调用和方法的访问修饰符相关，这是由方法访问的控制范围决定的
 */