package Sample.HouseRentalSystem_Han;

public class ProjectInterface {
    /*主菜单
    ====================房屋出租系统====================
                1   查找房屋
                2   新增房屋
                3   删除房屋
                4   修改房屋信息
                5   房屋列表
                6   退出
     */


    /*查找房屋
    ====================查找房屋====================
    请输入你要查找的id：
    1    Jack    118    海淀区    3000    未出租
    ====================查找房屋====================
     请输入你要查找的id：
    ====================没有该房屋====================
     */


    /*新增房屋
    ====================新增房屋====================
    姓名：
    电话：
    地址：
    月租：
    状态（未出租/已出租）：
    ====================添加完成====================
     */

    /*删除房屋
    ====================删除房屋====================
    请选择待删除房屋编号（-1退出）：
    确认是否删除（Y/N）：请小心选择：
    请输入您的选择（Y/N）：
    ====================删除完成====================
     */


    /*
    ====================修改房屋信息====================
    如果不希望修改某个信息，则直接回车
    请选择待修改房屋编号（-1退出）：
    姓名（原数据）：新数据
    电话（原数据）：新数据
    地址（原数据）：新数据
    月租（原数据）：新数据
    状态（原数据）：新数据
    ====================修改完成====================
     */


    /*房屋列表
    ====================房屋列表====================
    编号    房主    电话    地址    月租    状态（未出租/已出租）

    ====================房屋列表完成====================
     */


    /*退出
    ====================退出====================
    您确定要退出房屋出租系统吗（Y/N）：

    选择错误，请重新输入：
    您推出了程序~~~~~
     */
}
/*
项目设计-程序框架图（分层模式=>当程序比较复杂，需要模式管理），其他模式：Mod 2；Mwc
    1.系统有哪些类（文件）
    2.明确类与类的调用关系
HouseView.java[界面类]
    1.显示界面
    2.接受用户的输入
    3.调用HouseService类完成对房屋信息的各种操作
工具类
    1.完成获取用户各种输入
HouseService.java[业务类]
    1.响应HouseView的调用
    2.完成对房屋信息的各种操作（增删改查c[create]r[read]u[update]d[]delete）
House.java[实体类domain/model/数据层]
    1.一个House对象就表示一个房屋信息
HouseRentApp.java
    main(){
        //创建HouseView对象
        //调用该对象，显示主菜单
    }
*/

/*架构
https://blog.csdn.net/weixin_43322048/article/details/127572403?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522172077292816800172591435%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=172077292816800172591435&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-127572403-null-null.142^v100^control&utm_term=%E6%9E%B6%E6%9E%84&spm=1018.2226.3001.4187
 */
/*分层模式/分层架构
https://blog.csdn.net/weixin_34362790/article/details/93593061?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522172077284816800227475229%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=172077284816800227475229&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-2-93593061-null-null.142^v100^control&utm_term=%E5%88%86%E5%B1%82%E6%A8%A1%E5%BC%8F&spm=1018.2226.3001.4187
 */
/*Mvc框架
https://blog.csdn.net/weixin_44171249/article/details/124744991?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522172077272216800185841709%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=172077272216800185841709&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-124744991-null-null.142^v100^control&utm_term=mvc&spm=1018.2226.3001.4187
 */